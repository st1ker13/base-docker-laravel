version: '3.7'

networks:
  cnet:
    driver: bridge

services:
    nginx:
        build:
            context: ./
            dockerfile: docker/nginx.docker
        container_name: main-nginx
        networks:
          - cnet
        volumes:
            - ../project/:/var/www
            - ./docker/nginx/ssl:/etc/nginx/ssl
        environment:
          - VIRTUAL_HOST=dev.project.my
          - VIRTUAL_PORT=443
        ports:
            - 127.0.0.1:80:80
            - 127.0.0.1:443:443
        links:
            - php-fpm
    php-fpm:
        build:
            context: ./
            dockerfile: docker/php-fpm.docker
        container_name: main-php-fpm
        networks:
          - cnet
        volumes:
            - ../project/:/var/www
        links:
            - mysql
            - redis
            # - elasticsearch
        environment:
            - "DB_PORT=3306"
            - "DB_HOST=mysql"
            - "REDIS_PORT=6379"
            - "REDIS_HOST=redis"
            # - "ELASTICSEARCH_HOSTS=elasticsearch:9200"
    php-cli:
        build:
            context: ./
            dockerfile: docker/php-cli.docker
        container_name: main-php-cli
        networks:
          - cnet
        volumes:
            - ../project/:/var/www
        links:
            - mysql
            - redis
            # - elasticsearch
        environment:
            - "DB_PORT=3306"
            - "DB_HOST=mysql"
            - "REDIS_PORT=6379"
            - "REDIS_HOST=redis"
            # - "ELASTICSEARCH_HOSTS=elasticsearch:9200"
        tty: true
    mysql:
        image: mysql:5.7
        container_name: main-mysql
        networks:
          - cnet
        volumes:
            - ../project/storage/docker/mysql:/var/lib/mysql
        environment:
            - "MYSQL_ROOT_PASSWORD=secret"
            - "MYSQL_USER=app"
            - "MYSQL_PASSWORD=secret"
            - "MYSQL_DATABASE=app"
        ports:
            - "33060:3306"
    redis:
        image: redis:3.0
        container_name: main-redis
        networks:
          - cnet
        ports:
            - "63791:6379"
    node:
        build:
            context: ./
            dockerfile: docker/node.docker
        container_name: main-node
        networks:
          - cnet
        volumes:
            - ../project/:/var/www
        tty: true
    # elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    #     environment:
    #         - bootstrap.memory_lock=true
    #         - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
    #     ulimits:
    #         memlock:
    #             soft: -1
    #             hard: -1
    #     volumes:
    #         - ../project/storage/docker/elasticsearch:/usr/share/elasticsearch/data
    #     ports:
    #         - "9201:9200"